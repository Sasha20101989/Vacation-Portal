<Window x:Class="Vacation_Portal.MVVM.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:models="clr-namespace:Vacation_Portal.MVVM.Models"
        xmlns:local="clr-namespace:Vacation_Portal" 
        xmlns:vm="clr-namespace:Vacation_Portal.MVVM.ViewModels.For_Pages" 
        d:DataContext="{d:DesignInstance vm:MainWindowViewModel}"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"    
        FontSize="16"
        FontFamily="Verdana"
        Style="{StaticResource MaterialDesignWindow}"
        WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Card.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Badged.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type TextBlock}" x:Key="MaterialDesignTitleLargeTextBlock">
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="LineHeight" Value="28"/>
            </Style>
            <Style x:Key="NavigationBarListBox" TargetType="ListBox" BasedOn="{StaticResource MaterialDesignListBox}">
                <Setter Property="ItemContainerStyle" Value="{StaticResource MaterialDesignNavigationListBoxItem}"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationBarPrimaryListBox" TargetType="ListBox" BasedOn="{StaticResource NavigationBarListBox}">
                <Setter Property="ItemContainerStyle" Value="{DynamicResource NavigationBarPrimaryListBox}"/>
            </Style>
            <Style x:Key="NavigationBarListBoxItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="MinWidth" Value="80"/>
                <Setter Property="MinHeight" Value="62"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="md:NavigationBarAssist.CornerRadius" Value="0"/>
                <Setter Property="md:NavigationBarAssist.SelectionHeight" Value="32"/>
                <Setter Property="md:NavigationBarAssist.SelectionWidth" Value="64"/>
                <Setter Property="md:NavigationBarAssist.SelectionCornerRadius" Value="16"/>
                <Setter Property="md:NavigationBarAssist.SelectedIcon" Value="Circle"/>
                <Setter Property="md:NavigationBarAssist.UnselectedIcon" Value="CircleOutline"/>
                <Setter Property="md:NavigationBarAssist.IsTextVisible" Value="True"/>
                <Setter Property="md:NavigationBarAssist.IconSize" Value="24"/>
                <Setter Property="md:BadgedAssist.BadgeBackground" Value="{StaticResource PrimaryHueLightBrush}"/>
                <Setter Property="md:BadgedAssist.BadgeForeground" Value="{StaticResource PrimaryHueLightForegroundBrush}"/>
                <Setter Property="md:BadgedAssist.BadgePlacementMode" Value="TopRight"/>
                <Setter Property="md:ThemeAssist.Theme" Value="{DynamicResource MaterialDesignPaper}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="border"
                            Margin="{TemplateBinding Margin}"
                            CornerRadius="{Binding Path=(md:NavigationBarAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Normal"/>
                                        <VisualState Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="Opacity"
                                                             To="0.1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.6"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Unselected"/>
                                        <VisualState Name="SelectedUnfocused">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid ClipToBounds="False">
                                    <Grid>
                                        <Grid.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding ElementName="border" Path="ActualWidth" />
                                                <Binding ElementName="border" Path="ActualHeight" />
                                                <Binding ElementName="border" Path="CornerRadius" />
                                                <Binding ElementName="border" Path="BorderThickness" />
                                            </MultiBinding>
                                        </Grid.Clip>
                                        <Border x:Name="MouseOverBorder"
                                    Opacity="0"
                                    Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                        <Border x:Name="SelectedBorder" Opacity="0"
                                    VerticalAlignment="Top" Margin="0 12 0 16"
                                    Height="{Binding Path=(md:NavigationBarAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                    Width="{Binding Path=(md:NavigationBarAssist.SelectionWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{Binding Path=(md:NavigationBarAssist.SelectionCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        </Border>
                                        <md:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                        Focusable="False"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"
                                        RecognizesAccessKey="False"/>
                                    </Grid>

                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0 12 0 16">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="4*"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Grid HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      x:Name="IconContainer"
                                      Grid.RowSpan="1"
                                      Height="{Binding Path=(md:NavigationBarAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}">
                                            <md:Badged x:Name="badge" Badge="{Binding Path=(md:BadgedAssist.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Center"
                                                Style="{DynamicResource MaterialDesignBadge}"
                                                BadgeBackground="{Binding Path=(md:BadgedAssist.BadgeBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                BadgeForeground="{Binding Path=(md:BadgedAssist.BadgeForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="Center"
                                                BadgePlacementMode="{Binding Path=(md:BadgedAssist.BadgePlacementMode), RelativeSource={RelativeSource TemplatedParent}}">

                                                <md:PackIcon x:Name="Icon"
                                                      Kind="{Binding Path=(md:NavigationBarAssist.SelectedIcon), RelativeSource={RelativeSource TemplatedParent}}"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Width="{Binding Path=(md:NavigationBarAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="{Binding Path=(md:NavigationBarAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />
                                            </md:Badged>
                                        </Grid>
                                        <ContentControl x:Name="Text" Content="{TemplateBinding Content}" Grid.Row="1" Margin="4 4 4 0" Padding="0"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Icon" Property="Kind" Value="{Binding Path=(md:NavigationBarAssist.UnselectedIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="md:NavigationBarAssist.IsTextVisible" Value="False">
                                    <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="md:BadgedAssist.IsMiniBadge" Value="True">
                                    <Setter TargetName="badge" Property="Style" Value="{DynamicResource MaterialDesignMiniBadge}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationRailListBoxItem" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="Margin" Value="0 3"/>
                <Setter Property="FontWeight" Value="Regular"/>
                <Setter Property="Width" Value="80"/>
                <Setter Property="MinHeight" Value="40"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="md:NavigationRailAssist.CornerRadius" Value="0"/>
                <Setter Property="md:NavigationRailAssist.SelectionHeight" Value="40"/>
                <Setter Property="md:NavigationRailAssist.SelectionWidth" Value="40"/>
                <Setter Property="md:NavigationRailAssist.SelectionCornerRadius" Value="3"/>
                <Setter Property="md:NavigationRailAssist.SelectedIcon" Value="Dad"/>
                <Setter Property="md:NavigationRailAssist.UnselectedIcon" Value="DanceBallroom"/>
                <Setter Property="md:NavigationRailAssist.IsTextVisible" Value="True"/>
                <Setter Property="md:NavigationRailAssist.IconSize" Value="26"/>
                <Setter Property="md:BadgedAssist.BadgeBackground" Value="{DynamicResource PrimaryHueLightBrush}"/>
                <Setter Property="md:BadgedAssist.BadgeForeground" Value="{DynamicResource PrimaryHueLightForegroundBrush}"/>
                <Setter Property="md:BadgedAssist.BadgePlacementMode" Value="TopRight"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border x:Name="border"
                            Margin="{TemplateBinding Margin}"
                            CornerRadius="{Binding Path=(md:NavigationRailAssist.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
                            ClipToBounds="{TemplateBinding ClipToBounds}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.3" To="Normal">
                                                <VisualTransition.GeneratedEasingFunction>
                                                    <CircleEase EasingMode="EaseOut"/>
                                                </VisualTransition.GeneratedEasingFunction>
                                            </VisualTransition>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Normal"/>
                                        <VisualState Name="MouseOver">
                                            <!--<Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="MouseOverBorder" md:BadgedAssist.BadgeBackground="{DynamicResource PrimaryHueLightBrush}"
                                                             To="0.1" Duration="0"/>
                                            </Storyboard>-->
                                        </VisualState>
                                        <VisualState Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup Name="SelectionStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0:0:0.6"/>
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState Name="Unselected"/>
                                        <VisualState Name="SelectedUnfocused">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="SelectedBorder"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid ClipToBounds="False">
                                    <Grid>
                                        <Grid.Clip>
                                            <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                                <Binding ElementName="border" Path="ActualWidth" />
                                                <Binding ElementName="border" Path="ActualHeight" />
                                                <Binding ElementName="border" Path="CornerRadius" />
                                                <Binding ElementName="border" Path="BorderThickness" />
                                            </MultiBinding>
                                        </Grid.Clip>
                                        <Border x:Name="MouseOverBorder"
                                        Opacity="0"
                                        Background="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                                        <Border x:Name="SelectedBorder" Opacity="0"
                                        VerticalAlignment="Top"
                                        Height="{Binding Path=(md:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="{Binding Path=(md:NavigationRailAssist.SelectionWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{Binding Path=(md:NavigationRailAssist.SelectionCornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
                                        </Border>
                                        <md:Ripple Feedback="{TemplateBinding Foreground, Converter={StaticResource BrushRoundConverter}}"
                                            Focusable="False" ClipToBounds="False"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Padding="{TemplateBinding Padding}"
                                            RecognizesAccessKey="False"/>
                                    </Grid>


                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="4*"/>
                                            <RowDefinition Height="3*"/>
                                        </Grid.RowDefinitions>
                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="IconContainer" Grid.RowSpan="1"
                                      Height="{Binding Path=(md:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}">
                                            <md:Badged x:Name="badge" Badge="{Binding Path=(md:BadgedAssist.Badge), RelativeSource={RelativeSource TemplatedParent}}"
                                                HorizontalAlignment="Center"
                                                Style="{DynamicResource MaterialDesignBadge}"
                                                BadgeBackground="{Binding Path=(md:BadgedAssist.BadgeBackground), RelativeSource={RelativeSource TemplatedParent}}"
                                                BadgeForeground="{Binding Path=(md:BadgedAssist.BadgeForeground), RelativeSource={RelativeSource TemplatedParent}}"
                                                VerticalAlignment="Center"
                                                BadgePlacementMode="{Binding Path=(md:BadgedAssist.BadgePlacementMode), RelativeSource={RelativeSource TemplatedParent}}">

                                                <md:PackIcon x:Name="Icon" HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Kind="{Binding Path=(md:NavigationRailAssist.SelectedIcon), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Width="{Binding Path=(md:NavigationRailAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="{Binding Path=(md:NavigationRailAssist.IconSize), RelativeSource={RelativeSource TemplatedParent}}" />
                                            </md:Badged>
                                        </Grid>
                                        <ContentControl x:Name="Text" Content="{TemplateBinding Content}" Grid.Row="1" Margin="4 4 4 0" Padding="0"
                                                    HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>

                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Icon" Property="Kind" Value="{Binding Path=(md:NavigationRailAssist.UnselectedIcon), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="md:NavigationRailAssist.IsTextVisible" Value="False">
                                    <Setter TargetName="Text" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="IconContainer" Property="Grid.RowSpan" Value="2"/>
                                    <Setter TargetName="SelectedBorder" Property="Height" Value="{Binding Path=(md:NavigationRailAssist.SelectionWidth), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter TargetName="SelectedBorder" Property="CornerRadius" Value="{Binding Path=(md:NavigationRailAssist.SelectionHeight), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="md:BadgedAssist.IsMiniBadge" Value="True">
                                    <Setter TargetName="badge" Property="Style" Value="{DynamicResource MaterialDesignMiniBadge}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="NavigationRailPrimaryListBoxItem" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource NavigationRailListBoxItem}">
                <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <md:DialogHost Identifier="RootDialog" DialogTheme="Inherit">
        <md:DrawerHost Name="NavDrawer" OpenMode="Modal" 
                       IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
                       LeftDrawerCornerRadius=" 0 20 20 0">
            <md:DrawerHost.LeftDrawerContent>
                <DockPanel MinWidth="220">
                    <DockPanel DockPanel.Dock="Top" Margin="16" LastChildFill="False">
                        <!--<Image Source="/UI;component/Resources/Nissan.png" 
                               DockPanel.Dock="Left"
                               Stretch="Uniform"
                               Width="36" Height="36"/>-->

                        <TextBlock DockPanel.Dock="Left" Text="{Binding AdminString}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Margin="10 0 10 0" TextWrapping="Wrap"
                                   Style="{StaticResource MaterialDesignTextBlock}"/>

                        <Button DockPanel.Dock="Right" Name="MenuOpen" Height="56" Width="56"
                                Style="{StaticResource MaterialDesignIconForegroundButton}"
                                Foreground="{StaticResource MaterialDesignLightForeground}"
                                Click="MenuOpen_Click">
                            <md:PackIcon Kind="MenuOpen" Width="36" Height="36"/>
                        </Button>
                    </DockPanel>

                    <TextBox
                        x:Name="MenuItemsSearchBox"
                        Text="{Binding SearchKeyword,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        DockPanel.Dock="Top"
                        Margin="16 4 16 4"
                        md:HintAssist.Hint="Поиск страницы"
                        md:HintAssist.IsFloating="True"
                        md:TextFieldAssist.HasClearButton="True"
                        md:TextFieldAssist.HasOutlinedTextField="True"
                        md:TextFieldAssist.DecorationVisibility="Collapsed"
                        md:TextFieldAssist.TextFieldCornerRadius="8"/>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <StackPanel  Grid.Row="0" Grid.ColumnSpan="2">
                            <ListBox 
                                     x:Name="MenuItemsListBox" 
                                     Margin="12 16 12 16"
                                     SelectedIndex="{Binding SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                                     SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged}"
                                     ItemsSource="{Binding MenuItems, UpdateSourceTrigger=PropertyChanged}"
                                     AutomationProperties.Name="MenuPagesListBox">
                                <ListBox.Resources>
                                    <Style TargetType="ScrollViewer" BasedOn="{StaticResource MaterialDesignScrollViewer}"/>
                                    <Style TargetType="ScrollBar" BasedOn="{StaticResource MaterialDesignScrollBarMinimal}"/>
                                    <DataTemplate DataType="{x:Type models:MenuItem}">
                                        <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis"/>
                                    </DataTemplate>
                                </ListBox.Resources>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBoxItem}">
                                        <Setter Property="md:NavigationDrawerAssist.SelectedIcon" Value="{Binding SelectedIcon}"/>
                                        <Setter Property="md:NavigationDrawerAssist.UnselectedIcon" Value="{Binding UnselectedIcon}"/>
                                        <Setter Property="md:BadgedAssist.Badge" Value="{Binding Notifications}"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </StackPanel>
                        <Separator Grid.Row="2" Grid.ColumnSpan="2" Margin="0,0,0,32"/>
                        <Button Grid.Row="3" Grid.Column="1"
                                Margin="0,0,8,0"
                                HorizontalAlignment="Right"
                                Content="{md:PackIcon Kind=Cog, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Command="{Binding MoveToSettingsCommand}"
                                Foreground="{StaticResource MaterialDesignLightForeground}"
                                Click="MenuOpen_Click"/>
                    </Grid>
                </DockPanel>
            </md:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="34*"/>
                    <RowDefinition Height="611*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <md:ColorZone Padding="16"
                              md:ElevationAssist.Elevation="Dp0"
                              Mode="Standard" VerticalAlignment="Center">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <ToggleButton
                                x:Name="MenuToggleButton"
                                Style="{StaticResource MaterialDesignHamburgerToggleButton}"
                                IsChecked="False"
                                Cursor="Hand"
                                Margin="5 0 24 0"
                                Click="MenuToggleButton_OnClick"
                                AutomationProperties.Name="HamburgerToggleButton"/>

                            <Button
                                Margin="0 0 0 0"
                                ToolTip="Предыдущая страница"    
                                Command="{Binding MovePrevPageCommand}"
                                Content="{md:PackIcon Kind=ArrowLeft, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                md:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Button 
                                Margin="16,0,0,0"
                                ToolTip="Следующая страница"
                                Command="{Binding MoveNextPageCommand}"
                                Content="{md:PackIcon Kind=ArrowRight, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                md:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>

                            <Button
                                Margin="16,0,0,0"
                                ToolTip="Home"
                                Command="{Binding HomeCommand}"
                                Content="{md:PackIcon Kind=Home, Size=24}"
                                Style="{StaticResource MaterialDesignToolButton}"
                                Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                md:RippleAssist.Feedback="{Binding RelativeSource={RelativeSource Self}, Path=Foreground, Converter={StaticResource BrushRoundConverter}}"/>
                        </StackPanel>

                        <TextBlock Grid.Column="1" 
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="22"
                                       Text="{Binding Title}"
                                       TextWrapping="Wrap"/>

                        <md:PopupBox Grid.Column="2"
                                     PlacementMode="BottomAndAlignRightEdges"
                                     StaysOpen="False">
                            <StackPanel>
                                <Grid Margin="10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock
                                        Text="Light"
                                        Margin="0 0 10 0"/>

                                    <ToggleButton Command="{Binding ThemeChangeCommand}"
                                                  Style="{StaticResource MaterialDesignSwitchToggleButton}"
                                                  Grid.Column="1"/>
                                    <TextBlock
                                        Text="Dark"
                                        Margin="10 0 0 0"
                                        Grid.Column="2"/>

                                </Grid>
                                <Separator/>
                                <Button
                                    Content="Settings"
                                    Command="{Binding MoveToSettingsCommand}"/>
                            </StackPanel>
                        </md:PopupBox>
                    </Grid>
                </md:ColorZone>

                <Grid Grid.Row="1" Grid.RowSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Background="{DynamicResource MaterialDesignPaper}" Width="80" x:Name="NavRail"
                          Visibility="{Binding ElementName=NavDrawer,Path=IsLeftDrawerOpen,Converter={StaticResource InverseBoolToVisConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="167*"/>
                            <RowDefinition Height="479*"/>
                        </Grid.RowDefinitions>
                        <Viewbox Grid.Row="1" VerticalAlignment="Top" Stretch="Uniform">
                            <ListBox VerticalAlignment="Top" ItemsSource="{Binding MainMenuItems,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                     SelectedValue="{Binding SelectedItem}"
                                     Style="{StaticResource MaterialDesignNavigationListBox}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource NavigationRailPrimaryListBoxItem}">
                                        <Setter Property="md:NavigationRailAssist.SelectedIcon" Value="{Binding SelectedIcon}"/>
                                        <Setter Property="md:NavigationRailAssist.UnselectedIcon" Value="{Binding UnselectedIcon}"/>
                                        <Setter Property="md:NavigationRailAssist.IsTextVisible" Value="False"/>
                                        <Setter Property="md:BadgedAssist.Badge" Value="{Binding Notifications}"/>
                                        <Setter Property="md:BadgedAssist.BadgeBackground" Value="#930006"/>
                                        <Setter Property="md:BadgedAssist.BadgeForeground" Value="Transparent"/>
                                        <Setter Property="md:BadgedAssist.BadgeForeground" Value="Transparent"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.Resources>
                                    <DataTemplate DataType="{x:Type models:MenuItem}">
                                        <TextBlock Text="" TextWrapping="Wrap" TextAlignment="Center"/>
                                    </DataTemplate>
                                </ListBox.Resources>
                            </ListBox>
                        </Viewbox>
                    </Grid>


                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ContentControl
                           Grid.Row="1"
                            DataContext="{Binding SelectedItem}"
                            Margin="{Binding MarginRequirement, FallbackValue=16}"
                            Content="{Binding Content, UpdateSourceTrigger=PropertyChanged, FallbackValue={x:Null}}"/>

                        <md:Card x:Name="NotifycationPanel" Grid.Row="0" Grid.RowSpan="2"
                                 HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10"
                                 UniformCornerRadius="25"
                                 Visibility="{Binding SelectedItem.HasNotifications, Converter={StaticResource BooleanToVisibilityConverter},UpdateSourceTrigger=PropertyChanged}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>
                                <Button Grid.Row="0" Content="{md:PackIcon Kind=Close}" HorizontalAlignment="Right"
                                        Click="CLoseNotificationButton_Click" Style="{StaticResource MaterialDesignIconForegroundButton}"/>
                                <TextBlock Grid.Row="1" Text="{Binding SelectedItem.Notifications,StringFormat={}У вас {0} новых уведомлений!}"
                                           TextWrapping="Wrap" TextAlignment="Center" FontSize="18" Margin="0 0 0 20"/>
                                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
                                    <RepeatButton Content="Добавить уведомление" Style="{StaticResource MaterialDesignFlatButton}"
                                                  md:ButtonAssist.CornerRadius="16" Margin="0 0 10 0" Command="{Binding AddNewNotificationCommand}"/>
                                    <Button Content="Скрыть все" Style="{StaticResource MaterialDesignFlatMidBgButton}"
                                             md:ButtonAssist.CornerRadius="16" Command="{Binding DismissAllNotificationsCommand}"/>
                                </StackPanel>
                            </Grid>
                        </md:Card>
                    </Grid>
                </Grid>
            </Grid>
        </md:DrawerHost>
    </md:DialogHost>
</Window>
