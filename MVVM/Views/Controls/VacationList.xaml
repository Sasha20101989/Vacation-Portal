<UserControl x:Class="Vacation_Portal.MVVM.Views.Controls.VacationList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Vacation_Portal.MVVM.Views.Controls"
             mc:Ignorable="d"
             xmlns:vm="clr-namespace:Vacation_Portal.MVVM.ViewModels.For_Pages"  
             xmlns:vModels="clr-namespace:Vacation_Portal.MVVM.ViewModels"  
             xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             xmlns:models="clr-namespace:Vacation_Portal.MVVM.Models"
             xmlns:ext="clr-namespace:Vacation_Portal.Extensions"
             d:DataContext="{d:DesignInstance vm:PersonalVacationPlanningViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>

            <!--#region Styling Scrollbar-->
            <Style x:Key="ScrollThumbs"
           TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Width="Auto"
                                   Height="Auto"
                                   Fill="Transparent" />
                                <Border x:Name="Rectangle1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Width="Auto"
                                Height="Auto"
                                Background="{TemplateBinding Background}" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag"
                                 Value="Horizontal">
                                    <Setter TargetName="Rectangle1"
                                    Property="Width"
                                    Value="Auto" />
                                    <Setter TargetName="Rectangle1"
                                    Property="Height"
                                    Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
                <Setter Property="Foreground"
                Value="LightGray" />
                <Setter Property="Background"
                Value="Transparent" />
                <Setter Property="Width"
                Value="10" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot"
                          Width="2"
                          Background="{TemplateBinding Background}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <!--This is scrollbar track-->
                                <Track x:Name="PART_Track"
                               Grid.Row="0"
                               IsDirectionReversed="True"
                               Focusable="False">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb"
                                       Background="{TemplateBinding Foreground}"
                                       Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp"
                                              Command="ScrollBar.PageUpCommand"
                                              Opacity="0"
                                              Focusable="False" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown"
                                              Command="ScrollBar.PageDownCommand"
                                              Opacity="0"
                                              Focusable="False" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled"
                                 Value="False">
                                    <Setter TargetName="Thumb"
                                    Property="Visibility"
                                    Value="Collapsed" />
                                    <Setter TargetName="GridRoot"
                                    Property="Visibility"
                                    Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation"
                                 Value="Horizontal">
                                    <Setter TargetName="GridRoot"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track"
                                    Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width"
                                    Value="Auto" />
                                    <Setter Property="Height"
                                    Value="12" />
                                    <Setter TargetName="Thumb"
                                    Property="Tag"
                                    Value="Horizontal" />
                                    <Setter TargetName="PageDown"
                                    Property="Command"
                                    Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp"
                                    Property="Command"
                                    Value="ScrollBar.PageRightCommand" />
                                </Trigger>

                                <Trigger Property="IsMouseOver"
                                 Value="True">
                                    <Setter TargetName="GridRoot" Property="Width" Value="8" />
                                </Trigger>


                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
            <vm:PersonalVacationPlanningViewModel x:Key="viewModel"/>
            <ext:NonZeroConverter x:Key="NonZeroConverter" />
            <ext:StringEqualityToVisibilityConverter x:Key="StringEqualityToVisibilityConverter" />
            <ext:VacationStatusNameToVisibilityConverter x:Key="VacationStatusNameToVisibilityConverter" />
            <ext:CountToBoolConverter x:Key="CountToBoolConverter"/>

        </ResourceDictionary>
    </UserControl.Resources>
    <md:Badged Grid.Row="1" BadgePlacementMode="Top"  Margin="0 7 0 0">
        <md:Badged.Badge>
            <TextBlock Text="Запланированные отпуска" Margin="3" FontSize="10"/>
        </md:Badged.Badge>
        <md:Card md:ElevationAssist.Elevation="Dp6" x:Name="cardPlannedDays">
            <Border BorderBrush="{Binding BorderColorPLanedVacations}" BorderThickness="2" CornerRadius="10">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0" Margin="3" Name="ListView" SelectionMode="Single" MaxWidth="700"  Height="423"
                                      ItemsSource="{Binding VacationsToAprovalForSubordinate, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" 
                                      SelectedIndex="{Binding PlannedIndex, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      SelectedItem="{Binding PlannedItem, UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                      ScrollViewer.VerticalScrollBarVisibility="Auto" FontSize="12"
                                      ScrollViewer.CanContentScroll="False" Style="{StaticResource MaterialDesignListView}">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem" BasedOn="{StaticResource MaterialDesignGridViewItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="IsSelected" Value="True"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding VacationStatusName}" Value="Not Agreed">
                                        <Setter Property="Foreground" Value="red" />
                                        <Setter Property="Background" Value="#ffeeeeee" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="140" DisplayMemberBinding="{Binding Name}" Header="Тип отпуска"></GridViewColumn>
                                <GridViewColumn Width="95" DisplayMemberBinding="{Binding Count}" Header="Дней"></GridViewColumn>
                                <GridViewColumn Width="110" DisplayMemberBinding="{Binding DateStart,StringFormat=dd.MM.yyyy}" Header="Начало"></GridViewColumn>
                                <GridViewColumn Width="110" DisplayMemberBinding="{Binding DateEnd,StringFormat=dd.MM.yyyy}" Header="Конец"></GridViewColumn>
                                <GridViewColumn Width="115" DisplayMemberBinding="{Binding VacationStatusName}" Header="Статус"></GridViewColumn>
                                <GridViewColumn Width="90" Header="">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <md:PopupBox Grid.Column="2"
                                                             PlacementMode="BottomAndAlignRightEdges"
                                                             StaysOpen="true" DataContext="{Binding}" Opened="PopupBox_Opened" Closed="PopupBox_Closed">
                                                <StackPanel Orientation="Vertical">
                                                    <Button Style="{StaticResource MaterialDesignOutlinedLightButton}" 
                                                            Margin="10 0 10 10" Content="Компенсировать"
                                                            Foreground="ForestGreen" 
                                                            Command="{Binding Source={StaticResource viewModel},
                                                            Path=CompensateVacation}"
                                                            CommandParameter="{Binding RelativeSource={
                                                            RelativeSource AncestorType=ListView},
                                                            Path=SelectedItem}"
                                                        Visibility="{Binding Converter={StaticResource VacationStatusNameToVisibilityConverter}}">
                                                    </Button>
                                                    <Button Style="{StaticResource MaterialDesignOutlinedLightButton}" 
                                                            Margin="10 0 10 10" Content="Перенести"
                                                            Foreground="ForestGreen" 
                                                            Command="{Binding RelativeSource={
                                                              RelativeSource AncestorType=ListView},
                                                              Path=DataContext.OpenTransferWindow}"
                                                            CommandParameter="{Binding RelativeSource={
                                                              RelativeSource AncestorType=ListView},
                                                              Path=SelectedItem}"
                                                            Visibility="{Binding VacationStatusName, Converter={StaticResource StringEqualityToVisibilityConverter},
                                                              ConverterParameter=Planned}">
                                                    </Button>
                                                    <Button Style="{StaticResource MaterialDesignOutlinedLightButton}" 
                                                            Margin="10 0 10 10" Content="Отменить перенос"
                                                            Foreground="Red"
                                                            Command="{Binding Source={StaticResource viewModel},
                                                              Path=CancelTransferVacationCommand}"
                                                            CommandParameter="{Binding RelativeSource={
                                                              RelativeSource AncestorType=ListView},
                                                              Path=SelectedItem}"
                                                            Visibility="{Binding VacationStatusName, 
                                                              Converter={StaticResource StringEqualityToVisibilityConverter}, 
                                                              ConverterParameter='For Tranfser'}">
                                                    </Button>
                                                    <Button Style="{StaticResource MaterialDesignOutlinedLightButton}" 
                                                            Margin="10 0 10 0" Content="Удалить"
                                                            Foreground="Red"
                                                            Command="{Binding Source={StaticResource viewModel},
                                                              Path=CancelVacation}"
                                                            CommandParameter="{Binding RelativeSource={
                                                              RelativeSource AncestorType=ListView},
                                                              Path=SelectedItem}"
                                                            Visibility="{Binding VacationStatusName, 
                                                               Converter={StaticResource StringEqualityToVisibilityConverter}, 
                                                               ConverterParameter='Being Planned,Approved'}">
                                                    </Button>

                                                </StackPanel>
                                            </md:PopupBox>
                                            

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Width="280" VerticalAlignment="Bottom"
                                    Margin="30 0 3 6"
                                    Style="{DynamicResource MaterialDesignOutlinedLightButton}"
                                    Command="{Binding CheckVacations}" Content="Проверить и согласовать"
                                    IsEnabled="{Binding CountAllowancesForSubordinate, 
                                                Converter={StaticResource NonZeroConverter},
                                                UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"/>
                    </StackPanel>
                    <md:Snackbar  Grid.Row="2" MessageQueue="{Binding MessageQueuePLanedVacations,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ActionButtonPlacement="SeparateLine"/>
                </Grid>
            </Border>
        </md:Card>
    </md:Badged>
</UserControl>
